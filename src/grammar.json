{
  "name": "cicada",
  "rules": {
    "source_file": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "stmt"
      }
    },
    "stmt": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "on_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        },
        {
          "type": "SYMBOL",
          "name": "let_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "func_call_expr"
        }
      ]
    },
    "event_type": {
      "type": "PATTERN",
      "value": "[a-z.]+"
    },
    "on_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "on"
        },
        {
          "type": "FIELD",
          "name": "event",
          "content": {
            "type": "SYMBOL",
            "name": "event_type"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "where"
                },
                {
                  "type": "SYMBOL",
                  "name": "expr"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "let_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "mut"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "binary_expr"
        },
        {
          "type": "SYMBOL",
          "name": "unary_expr"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "paren_expr"
        },
        {
          "type": "SYMBOL",
          "name": "bool_literal"
        }
      ]
    },
    "func_call_expr": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "ident"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "string_ident"
            }
          },
          {
            "type": "PATTERN",
            "value": "\\r?\\n"
          }
        ]
      }
    },
    "paren_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "0b[01_]+"
        },
        {
          "type": "PATTERN",
          "value": "0o[0-7_]+"
        },
        {
          "type": "PATTERN",
          "value": "0x[A-Fa-f0-9_]+"
        },
        {
          "type": "PATTERN",
          "value": "[0-9]+([0-9])?"
        }
      ]
    },
    "bool_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "PATTERN",
                "value": "."
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "string_ident": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "paren_expr"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "PATTERN",
              "value": "[^\\S(]+"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "("
                      }
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr"
                    },
                    {
                      "type": "STRING",
                      "value": ")"
                    },
                    {
                      "type": "PATTERN",
                      "value": "[^\\S)]*"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      ]
    },
    "ident": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9._]*"
    },
    "unary_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "not"
              },
              {
                "type": "STRING",
                "value": "-"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "expr"
          }
        ]
      }
    },
    "binary_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expr"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "+"
              },
              {
                "type": "STRING",
                "value": "-"
              },
              {
                "type": "STRING",
                "value": "*"
              },
              {
                "type": "STRING",
                "value": "/"
              },
              {
                "type": "STRING",
                "value": "^"
              },
              {
                "type": "STRING",
                "value": "<"
              },
              {
                "type": "STRING",
                "value": "<="
              },
              {
                "type": "STRING",
                "value": ">"
              },
              {
                "type": "STRING",
                "value": ">="
              },
              {
                "type": "STRING",
                "value": "and"
              },
              {
                "type": "STRING",
                "value": "mod"
              },
              {
                "type": "STRING",
                "value": "or"
              },
              {
                "type": "STRING",
                "value": "is"
              },
              {
                "type": "STRING",
                "value": "xor"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "expr"
          }
        ]
      }
    },
    "comment": {
      "type": "PATTERN",
      "value": "#.*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

